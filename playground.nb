(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     63573,       1510]
NotebookOptionsPosition[     61264,       1448]
NotebookOutlinePosition[     61613,       1463]
CellTagsIndexPosition[     61570,       1460]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{
  "testFileName", "=", "\"\</mnt/c3ddb/alignment/results/BS/0.sam\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"metaTagDict", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<@HD\>\"", "\[Rule]", "\"\<HeaderLine\>\""}], ",", 
     RowBox[{"\"\<@SQ\>\"", "\[Rule]", "\"\<RefSequenceDict\>\""}], ",", 
     RowBox[{"\"\<@RG\>\"", "\[Rule]", "\"\<ReadGroup\>\""}], ",", 
     RowBox[{"\"\<@PG\>\"", "\[Rule]", "\"\<Program\>\""}], ",", 
     RowBox[{"\"\<@CO\>\"", "\[Rule]", "\"\<Comment\>\""}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"headerDict", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<VN\>\"", "\[Rule]", "\"\<FormatVersion\>\""}], ",", 
     RowBox[{"\"\<SO\>\"", "\[Rule]", "\"\<SortingOrder\>\""}], ",", 
     RowBox[{"\"\<GO\>\"", "\[Rule]", "\"\<AlignmentGrouping\>\""}], ",", 
     RowBox[{"\"\<SS\>\"", "\[Rule]", "\"\<SubSortingOrder\>\""}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sqDict", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<SN\>\"", "\[Rule]", "\"\<Name\>\""}], ",", 
     RowBox[{"\"\<LN\>\"", "\[Rule]", "\"\<Length\>\""}], ",", 
     RowBox[{"\"\<AH\>\"", "\[Rule]", "\"\<AlternateLocus\>\""}], ",", 
     RowBox[{"\"\<AN\>\"", "\[Rule]", "\"\<AlternativeNames\>\""}], ",", 
     RowBox[{"\"\<AS\>\"", "\[Rule]", "\"\<AssemblyID\>\""}], ",", 
     RowBox[{"\"\<DS\>\"", "\[Rule]", "\"\<Description\>\""}], ",", 
     RowBox[{"\"\<M5\>\"", "\[Rule]", "\"\<MD5\>\""}], ",", 
     RowBox[{"\"\<SP\>\"", "\[Rule]", "\"\<Species\>\""}], ",", 
     RowBox[{"\"\<UR\>\"", "\[Rule]", "\"\<URI\>\""}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rgDict", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<ID\>\"", "\[Rule]", "\"\<ID\>\""}], ",", 
     RowBox[{"\"\<BC\>\"", "\[Rule]", "\"\<Barcode\>\""}], ",", 
     RowBox[{"\"\<CN\>\"", "\[Rule]", "\"\<CenterName\>\""}], ",", 
     RowBox[{"\"\<DS\>\"", "\[Rule]", "\"\<Description\>\""}], ",", 
     RowBox[{"\"\<DT\>\"", "\[Rule]", "\"\<Date\>\""}], ",", 
     RowBox[{"\"\<FO\>\"", "\[Rule]", "\"\<FlowOrder\>\""}], ",", 
     RowBox[{"\"\<KS\>\"", "\[Rule]", "\"\<KeySequence\>\""}], ",", 
     RowBox[{"\"\<LB\>\"", "\[Rule]", "\"\<Library\>\""}], ",", 
     RowBox[{"\"\<PG\>\"", "\[Rule]", "\"\<Programs\>\""}], ",", 
     RowBox[{"\"\<PI\>\"", "\[Rule]", "\"\<PredictedInsertSize\>\""}], ",", 
     RowBox[{"\"\<PL\>\"", "\[Rule]", "\"\<Platform\>\""}], ",", 
     RowBox[{"\"\<PM\>\"", "\[Rule]", "\"\<PlatformModel\>\""}], ",", 
     RowBox[{"\"\<PU\>\"", "\[Rule]", "\"\<PlatformUnit\>\""}], ",", 
     RowBox[{"\"\<SM\>\"", "\[Rule]", "\"\<Sample\>\""}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pgDict", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<ID\>\"", "\[Rule]", "\"\<ID\>\""}], ",", 
     RowBox[{"\"\<PN\>\"", "\[Rule]", "\"\<Name\>\""}], ",", 
     RowBox[{"\"\<CL\>\"", "\[Rule]", "\"\<CommandLine\>\""}], ",", 
     RowBox[{"\"\<PP\>\"", "\[Rule]", "\"\<PreviousProgramID\>\""}], ",", 
     RowBox[{"\"\<DS\>\"", "\[Rule]", "\"\<Description\>\""}], ",", 
     RowBox[{"\"\<VN\>\"", "\[Rule]", "\"\<Version\>\""}]}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.758897990117361*^9, 3.758898032321228*^9}, 
   3.758898378032188*^9, {3.758898564734128*^9, 3.758898604554625*^9}, {
   3.758898655920743*^9, 3.7588986608815804`*^9}, {3.75889869652631*^9, 
   3.75889875976847*^9}, {3.7588988940504923`*^9, 3.7588989715893097`*^9}, {
   3.758899033238236*^9, 3.7588990728759813`*^9}, {3.758899302837491*^9, 
   3.758899532540461*^9}, {3.758899656873459*^9, 3.758899700825309*^9}, {
   3.7588997569784317`*^9, 3.758899818578937*^9}, 3.7588998786793957`*^9, {
   3.758899949139982*^9, 3.758900000419798*^9}, 3.7589000418254557`*^9, 
   3.758900224592903*^9, {3.7589003791432734`*^9, 3.758900508926598*^9}, {
   3.758900543920178*^9, 3.7589005732668552`*^9}, {3.7589006037848587`*^9, 
   3.758900677015082*^9}, {3.7589008064799128`*^9, 3.758901113791926*^9}, {
   3.758901183768189*^9, 3.758901374870619*^9}, {3.758901412088092*^9, 
   3.758901455636113*^9}},ExpressionUUID->"96d1d938-c1d5-4b43-b9e7-\
921bead60d5b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"headTest", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<@HD\\tVN:1.0\\tSO:unsorted\>\"", ",", 
     "\"\<@SQ\\tSN:NZ_CP020102.1\\tLN:4215607\>\"", ",", 
     "\"\<@SQ\\tSN:NZ_CP020103.1\\tLN:84215\>\"", ",", 
     "\"\<@PG\\tID:bowtie2\\tPN:bowtie2\\tVN:2.2.6\\tCL:\\\"/cm/shared/c3ddb/\
bowtie2/2.2.6/bin/bowtie2-align-s --wrapper basic-0 -x alignment/indice/BS -S \
alignment/results/BS/0.sam -1 mock/0_R1_paired.fastq -2 \
mock/0_R2_paired.fastq\\\"\>\"", ",", "\"\<@CO\\tThis\\tis\\ta\>\"", ",", 
     "\"\<@CO\\tcomment\\tline\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Import", "::", " ", "badsamheader"}], "=", 
   "\"\<Bad or unknown .SAM file header.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DumpSAMHead", "[", "rawHeadLines_List", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"cond", ",", "lines"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Testing", " ", "the", " ", "format", " ", "of", " ", "header", " ", 
       "lines"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"cond", "=", 
       RowBox[{"And", "[", 
        RowBox[{
         RowBox[{"MatchQ", "[", 
          RowBox[{"rawHeadLines", ",", 
           RowBox[{"{", "__String", "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"And", "@@", 
          RowBox[{"StringMatchQ", "[", 
           RowBox[{"rawHeadLines", ",", 
            RowBox[{
            "RegularExpression", "[", 
             "\"\<(^@(..)(\\\\t[A-Za-z][A-Za-z0-9]:[ -~]+)+$)|(^@CO\\\\t.*)\>\
\"", "]"}]}], "]"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"Not", "[", "cond", "]"}], ",", 
        RowBox[{
         RowBox[{"Message", "[", 
          RowBox[{"Import", "::", "badsamheader"}], "]"}], ";", 
         RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"lines", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"StringSplit", "[", 
          RowBox[{"#", ",", "\"\<\\t\>\""}], "]"}], "&"}], "/@", 
        "rawHeadLines"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Transform", " ", "the", " ", "lines", " ", "to", " ", 
        RowBox[{"format", ":", " ", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"@", "TAG"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"TAG", ",", " ", "val"}], "}"}], ",", " ", 
              RowBox[{"{", 
               RowBox[{"TAG", ",", " ", "val"}], "}"}]}], "}"}]}], "}"}], 
          "}"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"lines", "=", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"lines", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"StringMatchQ", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"_", "~~", "_", "~~", "\"\<:\>\"", "~~", "___"}]}], 
                "]"}], ",", 
               RowBox[{"StringSplit", "[", 
                RowBox[{"#", ",", "\"\<:\>\"", ",", "2"}], "]"}], ",", "#"}], 
              "]"}], "&"}], ",", 
            RowBox[{"lines", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", 
              RowBox[{"2", ";;"}]}], "\[RightDoubleBracket]"}], ",", 
            RowBox[{"{", "2", "}"}]}], "]"}]}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"Name", " ", "replacing"}], ",", " ", 
        RowBox[{"ignoring", " ", "the", " ", "unknown", " ", "tags"}]}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"lines", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Switch", "[", 
           RowBox[{
            RowBox[{
            "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"metaTagDict", "\[LeftDoubleBracket]", 
             RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
            RowBox[{"#", "/.", 
             RowBox[{"Union", "[", 
              RowBox[{"metaTagDict", ",", "headerDict"}], "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"metaTagDict", "\[LeftDoubleBracket]", 
             RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
            RowBox[{"#", "/.", 
             RowBox[{"Union", "[", 
              RowBox[{"metaTagDict", ",", "sqDict"}], "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"metaTagDict", "\[LeftDoubleBracket]", 
             RowBox[{"3", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
            RowBox[{"#", "/.", 
             RowBox[{"Union", "[", 
              RowBox[{"metaTagDict", ",", "rgDict"}], "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"metaTagDict", "\[LeftDoubleBracket]", 
             RowBox[{"4", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
            RowBox[{"#", "/.", 
             RowBox[{"Union", "[", 
              RowBox[{"metaTagDict", ",", "pgDict"}], "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"metaTagDict", "\[LeftDoubleBracket]", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "1"}], "\[RightDoubleBracket]"}], ",", 
            
            RowBox[{"#", "/.", "metaTagDict"}]}], "]"}], "&"}], ",", 
         "lines"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Merging", " ", "and", " ", "formating"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"lines", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"#", "\[LeftDoubleBracket]", 
            RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
           RowBox[{"#", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}]}], "}"}], 
         "&"}], "/@", 
        RowBox[{"Split", "[", 
         RowBox[{"lines", ",", 
          RowBox[{
           RowBox[{
            RowBox[{
            "#1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
            "\[Equal]", 
            RowBox[{
            "#2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
           "&"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"lines", "/.", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"metaTagDict", "\[LeftDoubleBracket]", 
             RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], ",", "x__"}],
            "}"}], "\[RuleDelayed]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"metaTagDict", "\[LeftDoubleBracket]", 
             RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], "\[Rule]", 
            RowBox[{"Apply", "[", 
             RowBox[{"Rule", ",", 
              RowBox[{"Flatten", "[", 
               RowBox[{"x", ",", "1"}], "]"}], ",", 
              RowBox[{"{", "1", "}"}]}], "]"}]}], ")"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"metaTagDict", "\[LeftDoubleBracket]", 
             RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}], ",", "x__"}],
            "}"}], "\[RuleDelayed]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"metaTagDict", "\[LeftDoubleBracket]", 
              RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}], "\[Rule]", 
             RowBox[{"Apply", "[", 
              RowBox[{"Rule", ",", "x", ",", 
               RowBox[{"{", "2", "}"}]}], "]"}]}], "/.", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"\"\<Length\>\"", "\[Rule]", "n_String"}], ")"}], 
              "\[RuleDelayed]", 
              RowBox[{"(", 
               RowBox[{"\"\<Length\>\"", "\[Rule]", 
                RowBox[{"ToExpression", "[", "n", "]"}]}], ")"}]}], "}"}]}], 
           ")"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"metaTagDict", "\[LeftDoubleBracket]", 
             RowBox[{"3", ",", "2"}], "\[RightDoubleBracket]"}], ",", "x__"}],
            "}"}], "\[RuleDelayed]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"metaTagDict", "\[LeftDoubleBracket]", 
             RowBox[{"3", ",", "2"}], "\[RightDoubleBracket]"}], "\[Rule]", 
            RowBox[{"Apply", "[", 
             RowBox[{"Rule", ",", "x", ",", 
              RowBox[{"{", "2", "}"}]}], "]"}]}], ")"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"metaTagDict", "\[LeftDoubleBracket]", 
             RowBox[{"4", ",", "2"}], "\[RightDoubleBracket]"}], ",", "x__"}],
            "}"}], "\[RuleDelayed]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"metaTagDict", "\[LeftDoubleBracket]", 
             RowBox[{"4", ",", "2"}], "\[RightDoubleBracket]"}], "\[Rule]", 
            RowBox[{"Apply", "[", 
             RowBox[{"Rule", ",", "x", ",", 
              RowBox[{"{", "2", "}"}]}], "]"}]}], ")"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"metaTagDict", "\[LeftDoubleBracket]", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "2"}], "\[RightDoubleBracket]"}], ",", 
            "x__"}], "}"}], "\[RuleDelayed]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"metaTagDict", "\[LeftDoubleBracket]", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "2"}], "\[RightDoubleBracket]"}], 
            "\[Rule]", 
            RowBox[{"Fold", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"#1", "<>", "\"\<\\n\>\"", "<>", "#2"}], "&"}], ",", 
              RowBox[{"Map", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Fold", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"#1", "<>", "\"\<\\t\>\"", "<>", "#2"}], "&"}], 
                   ",", "#"}], "]"}], "&"}], ",", "x", ",", 
                RowBox[{"{", "1", "}"}]}], "]"}]}], "]"}]}], ")"}]}]}], 
        "\[IndentingNewLine]", "}"}]}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"convertedHead", "=", 
  RowBox[{"DumpSAMHead", "[", "headTest", "]"}]}]}], "Input",
 CellChangeTimes->{{3.7589020674026814`*^9, 3.758902085813717*^9}, {
   3.7589021262988377`*^9, 3.758902187134179*^9}, {3.758902257461451*^9, 
   3.75890240826799*^9}, {3.7589081680816298`*^9, 3.758908181799385*^9}, {
   3.7589084964114113`*^9, 3.758908530991503*^9}, {3.758910653133507*^9, 
   3.758910654159143*^9}, {3.75891069360385*^9, 3.758910799720113*^9}, {
   3.758910853496957*^9, 3.758910892283279*^9}, {3.758910965554654*^9, 
   3.7589112451055202`*^9}, {3.758911285788562*^9, 3.758911317157304*^9}, {
   3.758911374428598*^9, 3.758911376712818*^9}, {3.7589115218163*^9, 
   3.758911569844852*^9}, {3.758911745103133*^9, 3.758911751909103*^9}, {
   3.7589118265164957`*^9, 3.7589118464134197`*^9}, {3.758911923204255*^9, 
   3.758911956826239*^9}, {3.758911991363348*^9, 3.758912060125558*^9}, {
   3.758912112788254*^9, 3.7589122619852123`*^9}, {3.758912394813923*^9, 
   3.7589127021041193`*^9}, {3.7589127711210623`*^9, 3.758912773609703*^9}, {
   3.758912822909614*^9, 3.758912907866721*^9}, {3.7589129466120987`*^9, 
   3.7589129605990267`*^9}, {3.758913013194025*^9, 3.7589131748614473`*^9}, {
   3.7589132131143103`*^9, 3.758913377242049*^9}, {3.7589134278504877`*^9, 
   3.7589134344353857`*^9}, {3.75891393835919*^9, 3.758913952113847*^9}, {
   3.758913994544941*^9, 3.7589140459725657`*^9}, {3.758914194440802*^9, 
   3.758914263893285*^9}, {3.758914362435862*^9, 3.7589144039225397`*^9}, {
   3.7589147694728947`*^9, 3.7589148111094503`*^9}, {3.758914849220107*^9, 
   3.7589150268146763`*^9}, {3.7589150707691936`*^9, 3.758915395229868*^9}, {
   3.7589154306792316`*^9, 3.758915460210013*^9}, {3.758915555512267*^9, 
   3.758915558098135*^9}, 3.7589156066948757`*^9, {3.7589156397435102`*^9, 
   3.758915725547448*^9}, {3.758915763843031*^9, 3.758915795775824*^9}, {
   3.758915903824082*^9, 3.7589159155204763`*^9}, {3.7589161200664883`*^9, 
   3.758916186597383*^9}, {3.758916219132687*^9, 3.75891642005525*^9}, {
   3.758916461257882*^9, 3.758916629342354*^9}, {3.758970600519693*^9, 
   3.7589706286611557`*^9}, {3.758970663751253*^9, 3.758970779712491*^9}, 
   3.75897084753379*^9, {3.7589708852927303`*^9, 3.7589709329264297`*^9}, {
   3.758970978448588*^9, 3.7589711281479692`*^9}, {3.75897140486976*^9, 
   3.7589714233365173`*^9}, {3.758971472941793*^9, 3.7589715020036173`*^9}, {
   3.758971649463286*^9, 3.7589717441542797`*^9}, {3.7589722548446207`*^9, 
   3.7589722785706673`*^9}},ExpressionUUID->"b031e4c1-8d33-453d-94bb-\
73d90f06aefa"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"HeaderLine\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\<\"FormatVersion\"\>", "\[Rule]", "\<\"1.0\"\>"}], ",", 
      RowBox[{"\<\"SortingOrder\"\>", "\[Rule]", "\<\"unsorted\"\>"}]}], 
     "}"}]}], ",", 
   RowBox[{"\<\"RefSequenceDict\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\<\"Name\"\>", "\[Rule]", "\<\"NZ_CP020102.1\"\>"}], ",", 
        RowBox[{"\<\"Length\"\>", "\[Rule]", "4215607"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\<\"Name\"\>", "\[Rule]", "\<\"NZ_CP020103.1\"\>"}], ",", 
        RowBox[{"\<\"Length\"\>", "\[Rule]", "84215"}]}], "}"}]}], "}"}]}], 
   ",", 
   RowBox[{"\<\"Program\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\<\"ID\"\>", "\[Rule]", "\<\"bowtie2\"\>"}], ",", 
       RowBox[{"\<\"Name\"\>", "\[Rule]", "\<\"bowtie2\"\>"}], ",", 
       RowBox[{"\<\"Version\"\>", "\[Rule]", "\<\"2.2.6\"\>"}], ",", 
       RowBox[{"\<\"CommandLine\"\>", 
        "\[Rule]", \
"\<\"\\\"/cm/shared/c3ddb/bowtie2/2.2.6/bin/bowtie2-align-s --wrapper basic-0 \
-x alignment/indice/BS -S alignment/results/BS/0.sam -1 \
mock/0_R1_paired.fastq -2 mock/0_R2_paired.fastq\\\"\"\>"}]}], "}"}], "}"}]}],
    ",", 
   RowBox[{"\<\"Comment\"\>", 
    "\[Rule]", "\<\"This\\tis\\ta\\ncomment\\tline\"\>"}]}], "}"}]], "Output",\

 CellChangeTimes->{
  3.7589769796849546`*^9},ExpressionUUID->"7ef01efd-861f-4f80-b34a-\
2d86b8ce1c43"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Reverse", "/@", "headerDict"}], "\[IndentingNewLine]", 
 RowBox[{"headerDict", "\[LeftDoubleBracket]", 
  RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}]}], "Input",
 CellChangeTimes->{{3.758974516037221*^9, 
  3.758974516374703*^9}},ExpressionUUID->"c10c89b3-8f5f-456c-82d3-\
ffa2df107e90"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"FormatVersion\"\>", "\[Rule]", "\<\"VN\"\>"}], ",", 
   RowBox[{"\<\"SortingOrder\"\>", "\[Rule]", "\<\"SO\"\>"}], ",", 
   RowBox[{"\<\"AlignmentGrouping\"\>", "\[Rule]", "\<\"GO\"\>"}], ",", 
   RowBox[{"\<\"SubSortingOrder\"\>", "\[Rule]", "\<\"SS\"\>"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.75897363211129*^9, 
  3.758974516832549*^9},ExpressionUUID->"e88e01de-9ef4-4926-a1f3-\
c8240e55136e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"FormatVersion\"\>", ",", "\<\"SortingOrder\"\>", 
   ",", "\<\"AlignmentGrouping\"\>", ",", "\<\"SubSortingOrder\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.75897363211129*^9, 
  3.758974516835113*^9},ExpressionUUID->"1dd7176b-9d70-4cbc-94ba-\
ff53f9d923f5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"BuildSAMHead", "[", "head_List", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "headlist", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"headlist", "=", 
       RowBox[{
        RowBox[{"Apply", "[", 
         RowBox[{"List", ",", "head", ",", "Infinity"}], "]"}], "/.", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"metaTagDict", "\[LeftDoubleBracket]", 
              RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
             "keyvals__"}], "}"}], "\[RuleDelayed]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"metaTagDict", "\[LeftDoubleBracket]", 
              RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"Fold", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"#1", "<>", "\"\<:\>\"", "<>", "#2"}], "&"}], ",", 
                  "#"}], "]"}], "&"}], "/@", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Select", "[", 
                  RowBox[{"keyvals", ",", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"headerDict", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], "~",
                     "MemberQ", "~", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "&"}]}], "]"}], "/.", 
                 RowBox[{"Reverse", "/@", "headerDict"}]}], ")"}]}], "}"}]}], 
            "}"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"metaTagDict", "\[LeftDoubleBracket]", 
              RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
             "list__"}], "}"}], "\[RuleDelayed]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"metaTagDict", "\[LeftDoubleBracket]", 
              RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Fold", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"#1", "<>", "\"\<:\>\"", "<>", 
                    RowBox[{"ToString", "[", "#2", "]"}]}], "&"}], ",", "#"}],
                    "]"}], "&"}], "/@", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Select", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"sqDict", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], "~",
                     "MemberQ", "~", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "&"}]}], "]"}], "/.", 
                   RowBox[{"Reverse", "/@", "sqDict"}]}], ")"}]}], ")"}], 
               "&"}], "/@", "list"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"metaTagDict", "\[LeftDoubleBracket]", 
              RowBox[{"3", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
             "list__"}], "}"}], "\[RuleDelayed]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"metaTagDict", "\[LeftDoubleBracket]", 
              RowBox[{"3", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Fold", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"#1", "<>", "\"\<:\>\"", "<>", 
                    RowBox[{"ToString", "[", "#2", "]"}]}], "&"}], ",", "#"}],
                    "]"}], "&"}], "/@", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Select", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"rgDict", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], "~",
                     "MemberQ", "~", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "&"}]}], "]"}], "/.", 
                   RowBox[{"Reverse", "/@", "rgDict"}]}], ")"}]}], ")"}], 
               "&"}], "/@", "list"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"metaTagDict", "\[LeftDoubleBracket]", 
              RowBox[{"4", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
             "list__"}], "}"}], "\[RuleDelayed]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"metaTagDict", "\[LeftDoubleBracket]", 
              RowBox[{"4", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Fold", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"#1", "<>", "\"\<:\>\"", "<>", 
                    RowBox[{"ToString", "[", "#2", "]"}]}], "&"}], ",", "#"}],
                    "]"}], "&"}], "/@", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Select", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"pgDict", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], "~",
                     "MemberQ", "~", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "&"}]}], "]"}], "/.", 
                   RowBox[{"Reverse", "/@", "pgDict"}]}], ")"}]}], ")"}], 
               "&"}], "/@", "list"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"metaTagDict", "\[LeftDoubleBracket]", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "2"}], "\[RightDoubleBracket]"}], ",",
              "comment__"}], "}"}], "\[RuleDelayed]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"metaTagDict", "\[LeftDoubleBracket]", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "\[RightDoubleBracket]"}], ",", 
             RowBox[{"List", "/@", 
              RowBox[{"StringSplit", "[", 
               RowBox[{"comment", ",", "\"\<\\n\>\""}], "]"}]}]}], "}"}]}]}], 
         "\[IndentingNewLine]", "}"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Concat", " ", "the", " ", "result", " ", "string"}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{"Function", "[", 
             RowBox[{
              RowBox[{"{", "x", "}"}], ",", 
              RowBox[{"x", "~", "Prepend", "~", 
               RowBox[{
               "#", "\[LeftDoubleBracket]", "1", 
                "\[RightDoubleBracket]"}]}]}], "]"}], ",", 
            RowBox[{
            "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
           "]"}], "&"}], "/@", 
         RowBox[{"Select", "[", 
          RowBox[{"headlist", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"metaTagDict", "\[LeftDoubleBracket]", 
              RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], "~", 
             "MemberQ", "~", 
             RowBox[{
             "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
            "&"}]}], "]"}]}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "x__String", "}"}], "\[RuleDelayed]", 
          RowBox[{"Fold", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"#1", "<>", "\"\<\\t\>\"", "<>", "#2"}], "&"}], ",", 
            RowBox[{"{", "x", "}"}]}], "]"}]}], "}"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"BuildSAMHead", "[", "convertedHead", "]"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJwdyFsogwEAxfFtWkNLYS2FXFuSljQ1izSJYUwray65rZUHUStFLUlJDUlZ
TGJW9jCbXLZsQ0ZGhj7My7LGwx60tlmJXFJ2vofTr/PP6x+WKmkUCiUnPvhh
MWxuUcNCtrfVBFNj6h3IG6vZhcknhB2W0X6cUBSS3cPAaIEf2htjzzBLo4zC
GrXnHQ5GRhjmuC9PkgzoOJ8XQd18ZjP8sRa2QOLG2EbaRJfB6QC/A971lnfC
s29PH6yTGhVQy7/cIHttwAK/NCwrnFhqsEH1msABwwuzR5DSnnQKK8YTz8n/
Ir+C3SucW2hg3njhjE7zCH37hA92zelf4br8KgKdrmAUVuYGP6CrlKBa4rKE
B3Q4uZ2eCE08ARM+HqjSoG1oig05f27SutBbPky53uPCrWp/OYzEpFVQbWNo
oZ6tWoYJVs8qzKaKzXDguGoPLvZ87sNfcdEh5Bn4pCzJqwuWKEouYL3c9wC5
7uJ3+A9Z/fWN
  "],ExpressionUUID->"2ff3b6f8-776e-45fe-89f5-957d0d2115a0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"@HD\\tVN:1.0\\tSO:unsorted\"\>", 
   ",", "\<\"@SQ\\tSN:NZ_CP020102.1\\tLN:4215607\"\>", 
   ",", "\<\"@SQ\\tSN:NZ_CP020103.1\\tLN:84215\"\>", 
   ",", "\<\"@PG\\tID:bowtie2\\tPN:bowtie2\\tVN:2.2.6\\tCL:\\\"/cm/shared/\
c3ddb/bowtie2/2.2.6/bin/bowtie2-align-s --wrapper basic-0 -x \
alignment/indice/BS -S alignment/results/BS/0.sam -1 mock/0_R1_paired.fastq \
-2 mock/0_R2_paired.fastq\\\"\"\>", ",", "\<\"@CO\\tThis\\tis\\ta\"\>", 
   ",", "\<\"@CO\\tcomment\\tline\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.758976983147231*^9},ExpressionUUID->"677ee84d-77ec-4aad-afc2-\
f42a69088916"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "align1", "=", 
   "\"\<NB501288_431_HV7C5BGX7:1:11101:17234:1780#ATGCGCAG\\t77\\t*\\t0\\t0\\\
t*\\t*\\t0\\t0\\\
tTTATTATGATTACTTAATTCGTTTGGAGATATTTGTCTGAAAACACTCATAAAAGCTTCTTCAACAAAATAAGTTGT\
TT\\t<AAEEEEEEEEEAEEEEAEEAEEEEEEAEEEEEEAEAAAA<E<AEAA66AAEEEEAA<<AA<AAA<AE<\
AAAA<AA<A<\\tYT:Z:UP\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"align2", "=", 
  "\"\<NB501288_431_HV7C5BGX7:1:11101:13399:19436#ATGCGCAG\\t89\\tNZ_CP020102.\
1\\t248725\\t40\\t79M\\t=\\t248725\\t0\\\
tATCTGGAATCGGCGCCTTTTTATGGTGCTTTGTTTTTATTACAATCGGAAGGGTTATAGGGATTATTCATGTTTAAT\
AC\\t6<<A<AEAA<<6<AAAEEEE<A<66<<AAA<6EEEEAEEEEAEAA<AAEA<AAAEEEEA<\
AEEEEEEEEEEEEEEEAAA\\tAS:i:-13\\tXN:i:0\\tXM:i:3\\tXO:i:0\\tXG:i:0\\tNM:i:3\\\
tMD:Z:0T0G3C73\\tYT:Z:UP\>\""}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lineDefinitions", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<QueryName\>\"", ",", "\"\<Flags\>\"", ",", "\"\<Reference\>\"", ",", 
     "\"\<Position\>\"", ",", "\"\<MappingQuality\>\"", ",", "\"\<CIGAR\>\"", 
     ",", "\"\<MateReference\>\"", ",", "\"\<MatePosition\>\"", ",", 
     "\"\<InferredTemplateLength\>\"", ",", "\"\<Sequence\>\"", ",", 
     "\"\<ReadQuality\>\"", ",", "\"\<Optionals\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"flagDefinitions", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Paired\>\"", ",", "\"\<MappedInProperPair\>\"", ",", 
     "\"\<Unmapped\>\"", ",", "\"\<MateUnmapped\>\"", ",", 
     "\"\<ReverseStrand\>\"", ",", "\"\<MateStrand\>\"", ",", 
     "\"\<FirstRead\>\"", ",", "\"\<SecondRead\>\"", ",", 
     "\"\<NonPrimaryAlign\>\"", ",", "\"\<FailedRead\>\"", ",", 
     RowBox[{"\"\<OpticalDuplicate,\>\"", "\"\<SupplementaryAlign\>\""}]}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"typeDict", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<A\>\"", "\[Rule]", "\"\<Character\>\""}], ",", 
     RowBox[{"\"\<i\>\"", "\[Rule]", "\"\<Integer\>\""}], ",", 
     RowBox[{"\"\<f\>\"", "\[Rule]", "\"\<Float\>\""}], ",", 
     RowBox[{"\"\<Z\>\"", "\[Rule]", "\"\<String\>\""}], ",", 
     RowBox[{"\"\<H\>\"", "\[Rule]", "\"\<Hex\>\""}], ",", 
     RowBox[{"\"\<B\>\"", "\[Rule]", "\"\<Array\>\""}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ParseFlag", "[", "flag_Integer", "]"}], ":=", 
   RowBox[{"flagDefinitions", "\[LeftDoubleBracket]", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Position", "[", 
      RowBox[{
       RowBox[{"Reverse", "@", 
        RowBox[{"IntegerDigits", "[", 
         RowBox[{"flag", ",", "2"}], "]"}]}], ",", "1"}], "]"}], "]"}], 
    "\[RightDoubleBracket]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CompileFlag", "[", "flaglist_List", "]"}], ":=", 
   RowBox[{"Total", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"2", "^", 
       RowBox[{"(", 
        RowBox[{"#", "-", "1"}], ")"}]}], "&"}], "/@", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Position", "[", 
         RowBox[{"flagDefinitions", ",", "#"}], "]"}], "&"}], "/@", 
       RowBox[{"Intersection", "[", 
        RowBox[{"flaglist", ",", "flagDefinitions"}], "]"}]}], "]"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ParseArray", "[", "arrayString_String", "]"}], ":=", 
   "arrayString"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CompileArray", "[", "array_List", "]"}], ":=", "array"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ParseOptional", "[", "optional_List", "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"optional", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"tag_String", ",", "type_String", ",", "val_String"}], "}"}], 
      "\[RuleDelayed]", "\[IndentingNewLine]", 
      RowBox[{"(", 
       RowBox[{"tag", "\[Rule]", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"\"\<Type\>\"", "\[Rule]", "type"}], "/.", "typeDict"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"\"\<Value\>\"", "\[Rule]", 
           RowBox[{"Switch", "[", 
            RowBox[{
            "type", ",", "\[IndentingNewLine]", "\"\<A\>\"", ",", "val", ",", 
             "\[IndentingNewLine]", "\"\<i\>\"", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"Not", "@", 
                RowBox[{"StringMatchQ", "[", 
                 RowBox[{"val", ",", 
                  RowBox[{"RegularExpression", "@", "\"\<[-+]?[0-9]+\>\""}]}],
                  "]"}]}], ",", 
               RowBox[{"Return", "[", "$Failed", "]"}], ",", 
               RowBox[{"ToExpression", "[", "val", "]"}]}], "]"}], ",", 
             "\[IndentingNewLine]", "\"\<f\>\"", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"Not", "@", 
                RowBox[{"StringMatchQ", "[", 
                 RowBox[{"val", ",", 
                  RowBox[{
                  "RegularExpression", "@", 
                   "\"\<[-+]?[0-9]*\\\\.?[0-9]+([eE][-+]?[0-9]+)?\>\""}]}], 
                 "]"}]}], ",", 
               RowBox[{"Return", "[", "$Failed", "]"}], ",", 
               RowBox[{"ToExpression", "[", "val", "]"}]}], "]"}], ",", 
             "\[IndentingNewLine]", "\"\<Z\>\"", ",", "val", ",", 
             "\[IndentingNewLine]", "\"\<H\>\"", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"Not", "@", 
                RowBox[{"StringMatchQ", "[", 
                 RowBox[{"val", ",", 
                  RowBox[{
                  "RegularExpression", "@", "\"\<([0-9A-F][0-9A-F])*\>\""}]}],
                  "]"}]}], ",", 
               RowBox[{"Return", "[", "$Failed", "]"}], ",", 
               RowBox[{"FromDigits", "[", 
                RowBox[{"val", ",", "16"}], "]"}]}], "]"}], ",", 
             "\[IndentingNewLine]", "\"\<B\>\"", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"Not", "@", 
                RowBox[{"StringMatchQ", "[", 
                 RowBox[{"val", ",", 
                  RowBox[{
                  "RegularExpression", "@", 
                   "\"\<[cCsSiIf](,[-+]?[0-9]*\\\\.?[0-9]+([eE][-+]?[0-9]+)?)*\
 \>\""}]}], "]"}]}], ",", 
               RowBox[{"Return", "[", "$Failed", "]"}], ",", 
               RowBox[{"ParseArray", "[", "val", "]"}]}], "]"}]}], 
            "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "}"}]}], 
       ")"}]}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Import", "::", " ", "badsamline"}], "=", 
   "\"\<`1` found when parsing for line `2`\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ParseAlignment", "[", "line_String", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"temp", ",", "list", ",", 
      RowBox[{"result", "=", 
       RowBox[{"{", "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"list", "=", 
      RowBox[{"StringSplit", "[", 
       RowBox[{"line", ",", "\"\<\\t\>\""}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"StringSplit", "[", 
      RowBox[{"line", ",", "\"\<\\t\>\""}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"result", ",", 
       RowBox[{
        RowBox[{
        "lineDefinitions", "\[LeftDoubleBracket]", "1", 
         "\[RightDoubleBracket]"}], "\[Rule]", 
        RowBox[{
        "list", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}], 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"result", ",", 
       RowBox[{
        RowBox[{
        "lineDefinitions", "\[LeftDoubleBracket]", "2", 
         "\[RightDoubleBracket]"}], "\[Rule]", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"Not", "@", 
           RowBox[{"StringMatchQ", "[", 
            RowBox[{
             RowBox[{
             "list", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
             ",", "NumberString"}], "]"}]}], ",", 
          RowBox[{"Message", "[", 
           RowBox[{
            RowBox[{"Import", "::", "badsamline"}], ",", 
            "\"\<Bad witwise flag\>\"", ",", "line"}], "]"}], ",", 
          RowBox[{"ParseFlag", "[", 
           RowBox[{"ToExpression", "[", 
            RowBox[{
            "list", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
            "]"}], "]"}]}], "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"result", ",", 
       RowBox[{
        RowBox[{
        "lineDefinitions", "\[LeftDoubleBracket]", "3", 
         "\[RightDoubleBracket]"}], "\[Rule]", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
           "list", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
           "\[Equal]", "\"\<*\>\""}], ",", 
          RowBox[{"Missing", "[", "\"\<NotAvailable\>\"", "]"}], ",", 
          RowBox[{
          "list", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
         "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"result", ",", 
       RowBox[{
        RowBox[{
        "lineDefinitions", "\[LeftDoubleBracket]", "4", 
         "\[RightDoubleBracket]"}], "\[Rule]", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"Not", "@", 
           RowBox[{"StringMatchQ", "[", 
            RowBox[{
             RowBox[{
             "list", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}], 
             ",", "NumberString"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{
             RowBox[{"Import", "::", "badsamline"}], ",", 
             "\"\<Bad mapping position\>\"", ",", "line"}], "]"}], ";", 
           RowBox[{"Return", "[", "$Failed", "]"}]}], ",", 
          RowBox[{"ToExpression", "@", 
           RowBox[{
           "list", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}]}],
          "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"result", ",", 
       RowBox[{
        RowBox[{
        "lineDefinitions", "\[LeftDoubleBracket]", "5", 
         "\[RightDoubleBracket]"}], "\[Rule]", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"Not", "@", 
           RowBox[{"StringMatchQ", "[", 
            RowBox[{
             RowBox[{
             "list", "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}], 
             ",", "NumberString"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{
             RowBox[{"Import", "::", "badsamline"}], ",", 
             "\"\<Bad mapping position\>\"", ",", "line"}], "]"}], ";", 
           RowBox[{"Return", "[", "$Failed", "]"}]}], ",", 
          RowBox[{"ToExpression", "@", 
           RowBox[{
           "list", "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}]}]}],
          "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"result", ",", 
       RowBox[{
        RowBox[{
        "lineDefinitions", "\[LeftDoubleBracket]", "6", 
         "\[RightDoubleBracket]"}], "\[Rule]", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"Not", "@", 
           RowBox[{"StringMatchQ", "[", 
            RowBox[{
             RowBox[{
             "list", "\[LeftDoubleBracket]", "6", "\[RightDoubleBracket]"}], 
             ",", 
             RowBox[{
             "RegularExpression", "@", 
              "\"\<\\\\*|([0-9]+[MIDNSHPX=])+\>\""}]}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{
             RowBox[{"Import", "::", "badsamline"}], ",", "\"\<Bad CIGAR\>\"",
              ",", "line"}], "]"}], ";", 
           RowBox[{"Return", "[", "$Failed", "]"}]}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
             "list", "\[LeftDoubleBracket]", "6", "\[RightDoubleBracket]"}], 
             "\[Equal]", "\"\<*\>\""}], ",", 
            RowBox[{"Missing", "[", "\"\<NotAvailable\>\"", "]"}], ",", 
            RowBox[{
            "list", "\[LeftDoubleBracket]", "6", "\[RightDoubleBracket]"}]}], 
           "]"}]}], "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"result", ",", 
       RowBox[{
        RowBox[{
        "lineDefinitions", "\[LeftDoubleBracket]", "7", 
         "\[RightDoubleBracket]"}], "\[Rule]", "\[IndentingNewLine]", 
        RowBox[{"Switch", "[", 
         RowBox[{
          RowBox[{
          "list", "\[LeftDoubleBracket]", "7", "\[RightDoubleBracket]"}], 
          ",", "\"\<*\>\"", ",", 
          RowBox[{"Missing", "[", "\"\<NotAvailable\>\"", "]"}], ",", 
          "\"\<=\>\"", ",", 
          RowBox[{
          "list", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], ",",
           "_", ",", 
          RowBox[{
          "list", "\[LeftDoubleBracket]", "7", "\[RightDoubleBracket]"}]}], 
         "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"result", ",", 
       RowBox[{
        RowBox[{
        "lineDefinitions", "\[LeftDoubleBracket]", "8", 
         "\[RightDoubleBracket]"}], "\[Rule]", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"Not", "@", 
           RowBox[{"StringMatchQ", "[", 
            RowBox[{
             RowBox[{
             "list", "\[LeftDoubleBracket]", "8", "\[RightDoubleBracket]"}], 
             ",", "NumberString"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{
             RowBox[{"Import", "::", "badsamline"}], ",", 
             "\"\<Bad mapping position\>\"", ",", "line"}], "]"}], ";", 
           RowBox[{"Return", "[", "$Failed", "]"}]}], ",", 
          RowBox[{"ToExpression", "@", 
           RowBox[{
           "list", "\[LeftDoubleBracket]", "8", "\[RightDoubleBracket]"}]}]}],
          "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"result", ",", 
       RowBox[{
        RowBox[{
        "lineDefinitions", "\[LeftDoubleBracket]", "9", 
         "\[RightDoubleBracket]"}], "\[Rule]", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"Not", "@", 
           RowBox[{"StringMatchQ", "[", 
            RowBox[{
             RowBox[{
             "list", "\[LeftDoubleBracket]", "9", "\[RightDoubleBracket]"}], 
             ",", "NumberString"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{
             RowBox[{"Import", "::", "badsamline"}], ",", 
             "\"\<Bad mapping position\>\"", ",", "line"}], "]"}], ";", 
           RowBox[{"Return", "[", "$Failed", "]"}]}], ",", 
          RowBox[{"ToExpression", "@", 
           RowBox[{
           "list", "\[LeftDoubleBracket]", "9", "\[RightDoubleBracket]"}]}]}],
          "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"result", ",", 
       RowBox[{
        RowBox[{
        "lineDefinitions", "\[LeftDoubleBracket]", "10", 
         "\[RightDoubleBracket]"}], "\[Rule]", 
        RowBox[{
        "list", "\[LeftDoubleBracket]", "10", "\[RightDoubleBracket]"}]}]}], 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"result", ",", 
       RowBox[{
        RowBox[{
        "lineDefinitions", "\[LeftDoubleBracket]", "11", 
         "\[RightDoubleBracket]"}], "\[Rule]", 
        RowBox[{
        "list", "\[LeftDoubleBracket]", "11", "\[RightDoubleBracket]"}]}]}], 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"result", ",", 
       RowBox[{
        RowBox[{"lineDefinitions", "\[LeftDoubleBracket]", 
         RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "\[Rule]", 
        RowBox[{"(", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"temp", "=", 
           RowBox[{"ParseOptional", "/@", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"StringSplit", "[", 
                RowBox[{"#", ",", "\"\<:\>\"", ",", "3"}], "]"}], "&"}], "/@", 
              RowBox[{"list", "\[LeftDoubleBracket]", 
               RowBox[{"12", ";;"}], "\[RightDoubleBracket]"}]}], ")"}]}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"temp", "~", "MemberQ", "~", "$Failed"}], ",", 
            RowBox[{
             RowBox[{"Message", "[", 
              RowBox[{
               RowBox[{"Import", "::", "badsamline"}], ",", 
               "\"\<Bad optional(s)\>\"", ",", "line"}], "]"}], ";", 
             RowBox[{"Return", "[", "$Failed", "]"}]}], ",", "temp"}], "]"}], 
          ";", "\[IndentingNewLine]", "temp"}], "\[IndentingNewLine]", 
         ")"}]}]}], "]"}], ";", "\[IndentingNewLine]", "result"}]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"ParseAlignment", "[", "align1", "]"}], "\[IndentingNewLine]", 
 RowBox[{"ParseAlignment", "[", "align2", "]"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJwdzltIkwEABeDtZyEhaoGVc0hqkITlSBvUEjMKZRRTc+oSL7XVGlltNPE2
WbrNJVrMC14RvIHYi7YttGXOSSZIumKCubEmTVtiC7MGGejWf/6HwwfnvJw4
kezGXYJGoyWSgdHMBO4Y3Xf55PndVKjN6yyGjy/xFFQvZE2+JLXEMabgm6oU
JxT41W4o0/d64M87EQH4SHkh0kA62H8lC5b6YoXQ5Q0vhRa3TgylwwYJLKFr
7sNPr39Vw7ocrQo+++NQQ5Ep6ilM25tuhtnh8m44N57bA+3vjGMwn900Dn8I
iGloNa1ZYSHPPgcZH5ZdsCJMvA75ybm7MPWadB/a1oIB+PBJykEjqY5hPgZX
HNePw3NLwVOQM2JnQ7ekTQAzfPpC6E8oEsHemjYppKfn18L3MSd0UD3qaYTp
hze74YCePkTtLZoXcKfcOAn3mhamYO0D7TwssBE2yC9e/QiJ29+X4a2I2K/w
936SD/b1Gf7CyjNJoSbSxa0AZZ25iwknKpfi4cbbCS50KkIy4dH+ezeh96yK
8lBIoxReLYtSwFnRxSooLNBUwxr/jAoyP0c/h+3bI63QMWOhDOXIR2FPPcsO
E8tOr0CJcmEVbjUQX2BHsJlynl3igXzmEGWRV+alfgzXH3hFauYwjsCdb/9Y
8D81vVKq
  "],ExpressionUUID->"56dea092-59c8-4693-b8f0-038f0d82c2eb"],

Cell[BoxData["\<\"NB501288_431_HV7C5BGX7:1:11101:13399:19436#ATGCGCAG\\t89\\\
tNZ_CP020102.1\\t248725\\t40\\t79M\\t=\\t248725\\t0\\\
tATCTGGAATCGGCGCCTTTTTATGGTGCTTTGTTTTTATTACAATCGGAAGGGTTATAGGGATTATTCATGTTTAAT\
AC\\t6<<A<AEAA<<6<AAAEEEE<A<66<<AAA<6EEEEAEEEEAEAA<AAEA<AAAEEEEA<\
AEEEEEEEEEEEEEEEAAA\\tAS:i:-13\\tXN:i:0\\tXM:i:3\\tXO:i:0\\tXG:i:0\\tNM:i:3\\\
tMD:Z:0T0G3C73\\tYT:Z:UP\"\>"], "Output",
 CellChangeTimes->{{3.7589853505093184`*^9, 3.758985387692768*^9}, {
   3.758985510768022*^9, 3.758985534276457*^9}, {3.758985634312582*^9, 
   3.758985641008905*^9}, 3.758985683990032*^9, 3.7589857175354357`*^9, {
   3.758985770523941*^9, 3.75898579579524*^9}, 3.758985842286396*^9, {
   3.75898605846699*^9, 3.758986082262026*^9}, {3.7589864442867002`*^9, 
   3.758986513658214*^9}, 3.758987833617613*^9, 3.7589879810348673`*^9, 
   3.758989403423502*^9, 
   3.7589895534521008`*^9},ExpressionUUID->"509a9351-79f7-4857-96aa-\
4e632b5dfa5a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"QueryName\"\>", 
    "\[Rule]", "\<\"NB501288_431_HV7C5BGX7:1:11101:17234:1780#ATGCGCAG\"\>"}],
    ",", 
   RowBox[{"\<\"Flags\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"Paired\"\>", ",", "\<\"Unmapped\"\>", 
      ",", "\<\"MateUnmapped\"\>", ",", "\<\"FirstRead\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"Reference\"\>", "\[Rule]", 
    RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
   RowBox[{"\<\"Position\"\>", "\[Rule]", "0"}], ",", 
   RowBox[{"\<\"MappingQuality\"\>", "\[Rule]", "0"}], ",", 
   RowBox[{"\<\"CIGAR\"\>", "\[Rule]", 
    RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
   RowBox[{"\<\"MateReference\"\>", "\[Rule]", 
    RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
   RowBox[{"\<\"MatePosition\"\>", "\[Rule]", "0"}], ",", 
   RowBox[{"\<\"InferredTemplateLength\"\>", "\[Rule]", "0"}], ",", 
   RowBox[{"\<\"Sequence\"\>", 
    "\[Rule]", \
"\<\"TTATTATGATTACTTAATTCGTTTGGAGATATTTGTCTGAAAACACTCATAAAAGCTTCTTCAACAAAATAAG\
TTGTTT\"\>"}], ",", 
   RowBox[{"\<\"ReadQuality\"\>", 
    "\[Rule]", \
"\<\"<AAEEEEEEEEEAEEEEAEEAEEEEEEAEEEEEEAEAAAA<E<AEAA66AAEEEEAA<<AA<AAA<AE<\
AAAA<AA<A<\"\>"}], ",", 
   RowBox[{"\<\"Optionals\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"YT\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\<\"Type\"\>", "\[Rule]", "\<\"String\"\>"}], ",", 
        RowBox[{"\<\"Value\"\>", "\[Rule]", "\<\"UP\"\>"}]}], "}"}]}], 
     "}"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7589853505093184`*^9, 3.758985387692768*^9}, {
   3.758985510768022*^9, 3.758985534276457*^9}, {3.758985634312582*^9, 
   3.758985641008905*^9}, 3.758985683990032*^9, 3.7589857175354357`*^9, {
   3.758985770523941*^9, 3.75898579579524*^9}, 3.758985842286396*^9, {
   3.75898605846699*^9, 3.758986082262026*^9}, {3.7589864442867002`*^9, 
   3.758986513658214*^9}, 3.758987833617613*^9, 3.7589879810348673`*^9, 
   3.758989403423502*^9, 
   3.758989553459364*^9},ExpressionUUID->"ddd92660-821e-4fff-8dbb-\
6a816a645ba6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"QueryName\"\>", 
    "\[Rule]", \
"\<\"NB501288_431_HV7C5BGX7:1:11101:13399:19436#ATGCGCAG\"\>"}], ",", 
   RowBox[{"\<\"Flags\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"Paired\"\>", ",", "\<\"MateUnmapped\"\>", 
      ",", "\<\"ReverseStrand\"\>", ",", "\<\"FirstRead\"\>"}], "}"}]}], ",", 
   
   RowBox[{"\<\"Reference\"\>", "\[Rule]", "\<\"NZ_CP020102.1\"\>"}], ",", 
   RowBox[{"\<\"Position\"\>", "\[Rule]", "248725"}], ",", 
   RowBox[{"\<\"MappingQuality\"\>", "\[Rule]", "40"}], ",", 
   RowBox[{"\<\"CIGAR\"\>", "\[Rule]", "\<\"79M\"\>"}], ",", 
   RowBox[{"\<\"MateReference\"\>", "\[Rule]", "\<\"NZ_CP020102.1\"\>"}], ",", 
   RowBox[{"\<\"MatePosition\"\>", "\[Rule]", "248725"}], ",", 
   RowBox[{"\<\"InferredTemplateLength\"\>", "\[Rule]", "0"}], ",", 
   RowBox[{"\<\"Sequence\"\>", 
    "\[Rule]", \
"\<\"ATCTGGAATCGGCGCCTTTTTATGGTGCTTTGTTTTTATTACAATCGGAAGGGTTATAGGGATTATTCATGTT\
TAATAC\"\>"}], ",", 
   RowBox[{"\<\"ReadQuality\"\>", 
    "\[Rule]", \
"\<\"6<<A<AEAA<<6<AAAEEEE<A<66<<AAA<6EEEEAEEEEAEAA<AAEA<AAAEEEEA<\
AEEEEEEEEEEEEEEEAAA\"\>"}], ",", 
   RowBox[{"\<\"Optionals\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\<\"AS\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\<\"Type\"\>", "\[Rule]", "\<\"Integer\"\>"}], ",", 
         RowBox[{"\<\"Value\"\>", "\[Rule]", 
          RowBox[{"-", "13"}]}]}], "}"}]}], ",", 
      RowBox[{"\<\"XN\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\<\"Type\"\>", "\[Rule]", "\<\"Integer\"\>"}], ",", 
         RowBox[{"\<\"Value\"\>", "\[Rule]", "0"}]}], "}"}]}], ",", 
      RowBox[{"\<\"XM\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\<\"Type\"\>", "\[Rule]", "\<\"Integer\"\>"}], ",", 
         RowBox[{"\<\"Value\"\>", "\[Rule]", "3"}]}], "}"}]}], ",", 
      RowBox[{"\<\"XO\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\<\"Type\"\>", "\[Rule]", "\<\"Integer\"\>"}], ",", 
         RowBox[{"\<\"Value\"\>", "\[Rule]", "0"}]}], "}"}]}], ",", 
      RowBox[{"\<\"XG\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\<\"Type\"\>", "\[Rule]", "\<\"Integer\"\>"}], ",", 
         RowBox[{"\<\"Value\"\>", "\[Rule]", "0"}]}], "}"}]}], ",", 
      RowBox[{"\<\"NM\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\<\"Type\"\>", "\[Rule]", "\<\"Integer\"\>"}], ",", 
         RowBox[{"\<\"Value\"\>", "\[Rule]", "3"}]}], "}"}]}], ",", 
      RowBox[{"\<\"MD\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\<\"Type\"\>", "\[Rule]", "\<\"String\"\>"}], ",", 
         RowBox[{"\<\"Value\"\>", "\[Rule]", "\<\"0T0G3C73\"\>"}]}], "}"}]}], 
      ",", 
      RowBox[{"\<\"YT\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\<\"Type\"\>", "\[Rule]", "\<\"String\"\>"}], ",", 
         RowBox[{"\<\"Value\"\>", "\[Rule]", "\<\"UP\"\>"}]}], "}"}]}]}], 
     "}"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7589853505093184`*^9, 3.758985387692768*^9}, {
   3.758985510768022*^9, 3.758985534276457*^9}, {3.758985634312582*^9, 
   3.758985641008905*^9}, 3.758985683990032*^9, 3.7589857175354357`*^9, {
   3.758985770523941*^9, 3.75898579579524*^9}, 3.758985842286396*^9, {
   3.75898605846699*^9, 3.758986082262026*^9}, {3.7589864442867002`*^9, 
   3.758986513658214*^9}, 3.758987833617613*^9, 3.7589879810348673`*^9, 
   3.758989403423502*^9, 
   3.758989553465618*^9},ExpressionUUID->"89b9cc8e-484b-40d9-8960-\
a2fddd129ab8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SAMImport", "[", 
   RowBox[{"filename_String", ",", " ", "options___"}], "]"}], ":=", "\n", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "strm", ",", "lines", ",", "rawHead", ",", "rawData", ",", "head", ",", 
      "data"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"strm", "=", 
      RowBox[{"OpenRead", "[", 
       RowBox[{"filename", ",", 
        RowBox[{"Method", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<File\>\"", ",", 
           RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
          "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"lines", "=", 
      RowBox[{"ReadList", "[", 
       RowBox[{"strm", ",", "String"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Close", "[", "strm", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"rawHead", "=", 
      RowBox[{"Select", "[", 
       RowBox[{"lines", ",", 
        RowBox[{"StringMatchQ", "[", 
         RowBox[{
          RowBox[{"Verbatim", "[", "\"\<@\>\"", "]"}], "~~", "___"}], "]"}]}],
        "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"rawData", "=", 
      RowBox[{"lines", "\[LeftDoubleBracket]", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "rawHead", "]"}], "+", "1"}], ";;"}], 
       "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"head", "=", 
      RowBox[{"DumpSAMHead", "[", "rawHead", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"data", "=", 
      RowBox[{
      "rawData", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<Header\>\"", "->", "head"}], ",", 
       RowBox[{"\"\<Data\>\"", "->", "data"}]}], "}"}]}]}], 
   "\[IndentingNewLine]", "]"}]}], "\n", 
 RowBox[{"SAMImport", "[", "testFileName", "]"}]}], "Input",
 CellChangeTimes->{{3.7589009328370247`*^9, 3.758900933092536*^9}, {
  3.758902279694108*^9, 3.7589022810059423`*^9}, {3.758977105251896*^9, 
  3.7589771765009813`*^9}, {3.758988524467778*^9, 
  3.758988533416636*^9}},ExpressionUUID->"f071fe02-cd2e-405f-9829-\
8ea005cd08d3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"Header\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\<\"HeaderLine\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\<\"FormatVersion\"\>", "\[Rule]", "\<\"1.0\"\>"}], ",", 
         RowBox[{"\<\"SortingOrder\"\>", "\[Rule]", "\<\"unsorted\"\>"}]}], 
        "}"}]}], ",", 
      RowBox[{"\<\"RefSequenceDict\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\<\"Name\"\>", "\[Rule]", "\<\"NZ_CP020102.1\"\>"}], ",", 
           
           RowBox[{"\<\"Length\"\>", "\[Rule]", "4215607"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\<\"Name\"\>", "\[Rule]", "\<\"NZ_CP020103.1\"\>"}], ",", 
           
           RowBox[{"\<\"Length\"\>", "\[Rule]", "84215"}]}], "}"}]}], "}"}]}],
       ",", 
      RowBox[{"\<\"Program\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\<\"ID\"\>", "\[Rule]", "\<\"bowtie2\"\>"}], ",", 
          RowBox[{"\<\"Name\"\>", "\[Rule]", "\<\"bowtie2\"\>"}], ",", 
          RowBox[{"\<\"Version\"\>", "\[Rule]", "\<\"2.2.6\"\>"}], ",", 
          
          RowBox[{"\<\"CommandLine\"\>", 
           "\[Rule]", \
"\<\"\\\"/cm/shared/c3ddb/bowtie2/2.2.6/bin/bowtie2-align-s --wrapper basic-0 \
-x alignment/indice/BS -S alignment/results/BS/0.sam -1 \
mock/0_R1_paired.fastq -2 mock/0_R2_paired.fastq\\\"\"\>"}]}], "}"}], 
        "}"}]}]}], "}"}]}], ",", 
   RowBox[{"\<\"Data\"\>", 
    "\[Rule]", \
"\<\"NB501288_431_HV7C5BGX7:1:11101:17234:1780#ATGCGCAG\\t77\\t*\\t0\\t0\\t*\\\
t*\\t0\\t0\\\
tTTATTATGATTACTTAATTCGTTTGGAGATATTTGTCTGAAAACACTCATAAAAGCTTCTTCAACAAAATAAGTTGT\
TT\\t<AAEEEEEEEEEAEEEEAEEAEEEEEEAEEEEEEAEAAAA<E<AEAA66AAEEEEAA<<AA<AAA<AE<\
AAAA<AA<A<\\tYT:Z:UP\"\>"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.758898061042416*^9, 3.7588983785249977`*^9, 3.7588986054448338`*^9, 
   3.7588986660922413`*^9, {3.758898732078496*^9, 3.758898751592271*^9}, {
   3.758898905113866*^9, 3.7588989152322702`*^9}, 3.758898972964718*^9, 
   3.758900070095189*^9, 3.758902281501102*^9, {3.758977139517879*^9, 
   3.758977176994739*^9}},ExpressionUUID->"17ee4e0c-a33d-473e-8cf4-\
55484346b9ce"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StringCases", "[", 
  RowBox[{"\"\<ed:af\>\"", ",", 
   RowBox[{
    RowBox[{"x1_", "~~", "x2_", "~~", "\"\<:\>\"", "~~", "y___"}], "\[Rule]", 
    
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x1", "~~", "x2"}], ",", "y"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.758911586690452*^9, 3.758911597083516*^9}, {
  3.75891169991511*^9, 
  3.758911712382071*^9}},ExpressionUUID->"e2b164f2-e8fb-429e-81ab-\
43fe221723eb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"\<\"ed\"\>", ",", "\<\"af\"\>"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.758911597506489*^9, {3.758911705928446*^9, 
   3.75891171282023*^9}},ExpressionUUID->"5e23d64a-22a6-4e72-8e12-\
895455495ec5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StringMatchQ", "[", 
  RowBox[{"\"\<ed:af\>\"", ",", 
   RowBox[{"x1_", "~~", "x2_", "~~", "\"\<:\>\"", "~~", "y___"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.758911608002389*^9, 
  3.758911655016749*^9}},ExpressionUUID->"a27f8ffd-4f43-43d2-a71a-\
b5da33e87a4f"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.758911645802112*^9, 
  3.75891165542484*^9}},ExpressionUUID->"90754ab9-9572-40a4-b388-\
74aebb6e93c8"]
}, Open  ]]
},
WindowSize->{1381, 768},
WindowMargins->{{Automatic, -98}, {Automatic, 132}},
FrontEndVersion->"11.1 for Linux x86 (64-bit) (2017\:5e744\:670818\:65e5)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 4200, 81, 195, "Input", "ExpressionUUID" -> \
"96d1d938-c1d5-4b43-b9e7-921bead60d5b"],
Cell[CellGroupData[{
Cell[4783, 105, 13345, 295, 740, "Input", "ExpressionUUID" -> \
"b031e4c1-8d33-453d-94bb-73d90f06aefa"],
Cell[18131, 402, 1551, 39, 147, "Output", "ExpressionUUID" -> \
"7ef01efd-861f-4f80-b34a-2d86b8ce1c43"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19719, 446, 321, 6, 56, "Input", "ExpressionUUID" -> \
"c10c89b3-8f5f-456c-82d3-ffa2df107e90"],
Cell[20043, 454, 460, 10, 34, "Output", "ExpressionUUID" -> \
"e88e01de-9ef4-4926-a1f3-c8240e55136e"],
Cell[20506, 466, 308, 7, 34, "Output", "ExpressionUUID" -> \
"1dd7176b-9d70-4cbc-94ba-ff53f9d923f5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20851, 478, 9237, 216, 400, "Input", "ExpressionUUID" -> \
"2ff3b6f8-776e-45fe-89f5-957d0d2115a0"],
Cell[30091, 696, 639, 12, 79, "Output", "ExpressionUUID" -> \
"677ee84d-77ec-4aad-afc2-f42a69088916"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30767, 713, 18101, 432, 1496, "Input", "ExpressionUUID" -> \
"56dea092-59c8-4693-b8f0-038f0d82c2eb"],
Cell[48871, 1147, 943, 14, 99, "Output", "ExpressionUUID" -> \
"509a9351-79f7-4857-96aa-4e632b5dfa5a"],
Cell[49817, 1163, 2087, 44, 103, "Output", "ExpressionUUID" -> \
"ddd92660-821e-4fff-8dbb-6a816a645ba6"],
Cell[51907, 1209, 3586, 80, 206, "Output", "ExpressionUUID" -> \
"89b9cc8e-484b-40d9-8960-a2fddd129ab8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55530, 1294, 2190, 53, 285, "Input", "ExpressionUUID" -> \
"f071fe02-cd2e-405f-9829-8ea005cd08d3"],
Cell[57723, 1349, 2280, 53, 169, "Output", "ExpressionUUID" -> \
"17ee4e0c-a33d-473e-8cf4-55484346b9ce"]
}, Open  ]],
Cell[CellGroupData[{
Cell[60040, 1407, 452, 12, 34, "Input", "ExpressionUUID" -> \
"e2b164f2-e8fb-429e-81ab-43fe221723eb"],
Cell[60495, 1421, 266, 7, 34, "Output", "ExpressionUUID" -> \
"5e23d64a-22a6-4e72-8e12-895455495ec5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[60798, 1433, 291, 7, 34, "Input", "ExpressionUUID" -> \
"a27f8ffd-4f43-43d2-a71a-b5da33e87a4f"],
Cell[61092, 1442, 156, 3, 32, "Output", "ExpressionUUID" -> \
"90754ab9-9572-40a4-b388-74aebb6e93c8"]
}, Open  ]]
}
]
*)

